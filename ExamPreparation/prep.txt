'use strict'; // код работает в современном режиме

В этом файле я переписываю теорию, для лучшего запоминания ее. Основной язык - JavaScript.


................................Базовые понятия................................

Абстракция это обобщение, отвлеченное от конкретики с выделением существенных и отсечением несущественных свойств и связей. Абстрагирование - построение абстракций или моделей, повышает повторное использование алгоритмов и структур данных.
    *Абстракция - обобщенное решение задачи (в отличие от конкретного решения), подходящее для широкого круга задач;
    *Абстракция - модель реального объекта (множества объектов), обобщение множества, приближение к реальности, достаточное для решения задачи;
    *Абстракция - множество свойств и связей объекта, относящееся к определенному его аспекту, необходимому для решения задачи;

Парадигма программирования
    *Парадигма задает набор идей и понятий, допущений и ограничений, для концепций, принципов, постулатов, приемов и техники программирования для решения задач на ЭВМ;
    *Парадигма предлагает модель решения задач, определенный стиль, шаблоны (примеры хороших и плохих решений) применяемых для написания программного кода;

Синтаксис - правила построения програмного кода из символов, но не затрагивающие смысловую (семантическую) нагрузку кода. Синтаксис определяет только формальную структуру кода;

Значение / Value - величина, записанная в определенное место памяти в определенном формате и представляющая данные, которым может манипулировать программа.

Тип - множество значений и операции, которые могут быть произведены над этими значениями. 
    - [Number, String, Boolean, Object, Function, Array]

Литерал / Literal - запись значения в коде программы. Литералы могут иметь различный синтаксис, от очень простого, для записи чисел, до сложных синтаксических конструкций, для записи объектов.
    - let value = 'value'; ---- 'value' это литерал строки.

Скаляр / Scalar / Primitive / Atomic Value - значение примитивного типа данных. Скаляр копируется при присвоении и передается в функцию по значению.

Ссылка / Reference указывает на значение ссылочного типа, т.е. не скалярное значние, для JavaScript это подтипы Object, Function, Array.

Идентификатор / Identifier - имена переменных, констант, функций, методов, аргументов, классов, как внутренние, так и импортированные из других модулей и глобальные.
    - let name = 5; ---- name это идентификатор.

Переменная / Variable - именованная область памяти (идентификатор), имеющая тип данных, адрес и значение. Мы можем менять значение переменной в отличие от константы (а для некоторых языков и тип):
    - let cityName = 'Kyiv';

Присвоение / Assignment - связывания значения и идентификатора (например переменной). Операция присвоения во многих языках возвращает присваемое значение (имеет поведение выражения).
    - let cityName = 'Kyiv'; ---- = это присвоение.

Константа / Constant - идентификатор, с которым связано неизменяемое значение и тип:
    - const WATCH_TIMEOUT = 5000;

Структурные типы / Composed types - композитные типы или структуры состоят из нескольких скалярных значений, объединенных в одно таким образом, чтоб над этим объединенным значением можно выполнять набор операций, например: объект, массив, множество, кортеж.

Перечислимые типы - структуры, значения которых можно перечислить.

Флаг / Flag - Логическое значение, определяющее состояние чего-либо, например, признак закрытия соединения, признак завершения поиска по структуре данных и т.д. Например:
    - let flagName = false; Иногда флагами могут называть не логические, а перечислимые типы.

Алгоритм / Algorithm - это формальное описание порядка вычислений для определенного класса задач за конечное время (способность завершаться для любого множества входных данных).



................................Основные понятия................................
